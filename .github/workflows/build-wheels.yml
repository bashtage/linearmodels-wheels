name: Build wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: ${{ matrix.os }}, Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [cp39, cp310, cp311, cp312, cp313]
    env:
      BUILD_COMMIT: "v6.0"  # main or a specific version, e.g., v4.25
      PYPI_UPLOAD: true  # true or false
      TESTPYPI_UPLOAD: false
      CIBW_BUILD: ${{ matrix.python }}-*
      CIBW_ARCHS_LINUX: "x86_64 aarch64"
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      # No support for pypy, musl, Win32 for 3.10+
      CIBW_SKIP: "pp* *musllinux_aarch64* *-win32 cp39-musllinux*"
      CIBW_TEST_REQUIRES: pytest==7.4.4 pytest-xdist
      CIBW_TEST_COMMAND: python -c "import linearmodels; linearmodels.test(['-n','2','--skip-slow'])"
      # Avoid testing on emulated architectures
      CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x} *-win32"
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: 'auditwheel repair --strip -w {dest_dir} {wheel}'
      MKL_NUM_THREADS: 1
      OMP_NUM_THREADS: 1
      OPENLAS_NUM_THREADS: 1

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels (Default)
        uses: pypa/cibuildwheel@v2.21
        with:
          output-dir: wheelhouse
          package-dir: linearmodels
        env:
          CIBW_BEFORE_BUILD: 'git submodule foreach git checkout  ${{ env.BUILD_COMMIT }}'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Upload wheels
        if: always()
        run: source twine-upload.sh
        env:
          TESTPYPI_TOKEN: ${{ secrets.TESTPYPI_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
